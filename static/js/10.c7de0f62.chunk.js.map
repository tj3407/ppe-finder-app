{"version":3,"sources":["components/firebase/firebase.js","workflow/donate/components/CardContainer.js","workflow/components/MapLayout.js","workflow/components/CityField.js","workflow/donate/DonateLayout.js"],"names":["db","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","card","cursor","infoWindow","padding","spacing","root","margin","divider","smBottomMargin","marginBottom","icon","verticalAlign","header","alignItems","main","minHeight","button","maxHeight","CardContainer","props","classes","React","useState","isListPage","itemMapping","n95","gloves","coverall","orgName","item","structured_formatting","main_text","orgAddress","formatted_address","Grid","xs","sm","className","Card","variant","onClick","handleInfoWindowClick","CardHeader","disableTypography","title","Typography","paragraph","subheader","CardContent","container","justify","department","items","length","map","product","key","CardActions","id","Button","fullWidth","disableElevation","color","left","width","GoogleApiWrapper","memo","lat","lng","position","setPosition","showWindow","marker","state","setState","useEffect","cityLocation","handleClick","e","console","log","history","push","pathname","google","zoom","center","data","geometry","location","uid","name","visible","onClose","onOpen","ReactDOM","render","Children","only","document","getElementById","onInfoWindowOpen","textAlign","input","textField","backgroundColor","marginTop","CityField","cityOptions","setCityOptions","cityValue","setCityValue","setLocation","timer","useRef","a","fetch","res","json","predictions","clearTimeout","current","delay","setTimeout","handleChange","event","value","target","handleCityAutoCompleteChange","place_id","result","Autocomplete","freeSolo","options","onChange","getOptionLabel","option","description","renderOption","Fragment","style","secondary_text","renderInput","params","TextField","autoFocus","required","placeholder","paper","cityField","bottom","withRouter","setData","collection","get","then","val","docs","doc"],"mappings":"yHAAA,+CAeMA,EAfN,OAaoBC,EAASC,cAXd,CACXC,OAAQC,0CACRC,WAAYD,iCACZE,YAAaF,wCACbG,UAAWH,iBACXI,cAAeJ,6BACfK,kBAAmBL,eACnBM,MAAON,4CACPO,cAAeP,iBAKIQ,a,wNCGjBC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQ,WAEVC,WAAY,CACVC,QAASJ,EAAMK,QAAQ,IAEzBC,KAAM,CACJC,OAAQP,EAAMK,QAAQ,IAExBG,QAAS,CACPD,OAAQP,EAAMK,QAAQ,IAExBI,eAAgB,CACdC,aAAc,IAEhBC,KAAM,CACJC,cAAe,UAEjBC,OAAQ,CACNC,WAAY,UAEdC,KAAM,CACJC,UAAW,KAEbC,OAAQ,CACNC,UAAW,QAkHAC,EA9GO,SAAAC,GACpB,IAAMC,EAAUvB,IADa,EAEOwB,IAAMC,UAAS,GAFtB,mBAEtBC,EAFsB,KAGvBC,GAHuB,KAGT,CAClBC,IAAK,gBACL,YAAa,YACb,cAAe,cACfC,OAAQ,SACRC,SAAU,cAGNC,EACHT,EAAMU,KAAKD,SACVT,EAAMU,KAAKD,QAAQE,uBACnBX,EAAMU,KAAKD,QAAQE,sBAAsBC,WAC3CZ,EAAMU,KAAKD,SACX,GACII,EACHb,EAAMU,KAAKG,YAAcb,EAAMU,KAAKG,WAAWC,mBAChDd,EAAMU,KAAKG,YACX,GAEF,OACE,kBAACE,EAAA,EAAD,CAAML,MAAI,EAACM,GAAI,GAAIC,GAAI,GAAIC,UAAWjB,EAAQf,MAC5C,kBAACiC,EAAA,EAAD,CACEC,QAAQ,WACRC,QAASrB,EAAMsB,sBACfJ,UAAWjB,EAAQpB,MAEnB,kBAAC0C,EAAA,EAAD,CACEL,UAAWjB,EAAQR,OACnB+B,mBAAiB,EACjBC,MAAO,kBAACC,EAAA,EAAD,CAAYC,WAAS,GAAElB,GAC9BmB,UAAW,kBAACF,EAAA,EAAD,CAAYN,QAAQ,WAAWP,KAE5C,kBAACgB,EAAA,EAAD,KACE,kBAACd,EAAA,EAAD,CACEe,WAAS,EACTC,QAAQ,gBACRb,UAAWjB,EAAQZ,gBAEnB,kBAACqC,EAAA,EAAD,CAAYN,QAAQ,WAClB,kBAAC,IAAD,CAAcF,UAAWjB,EAAQV,OADnC,qBAGA,kBAACmC,EAAA,EAAD,CAAYN,QAAQ,WAAWpB,EAAMU,KAAKsB,aAuB5C,kBAACjB,EAAA,EAAD,CACEe,WAAS,EACTC,QAAQ,gBACRb,UAAWjB,EAAQZ,gBAEnB,kBAACqC,EAAA,EAAD,CAAYN,QAAQ,WAClB,kBAAC,IAAD,CAAeF,UAAWjB,EAAQV,OADpC,iBAIA,6BACGS,EAAMU,KAAKuB,OACVjC,EAAMU,KAAKuB,MAAMC,QACjBlC,EAAMU,KAAKuB,MAAME,KAAI,SAAAC,GACnB,OACE,kBAACrB,EAAA,EAAD,CAAML,MAAI,EAACM,GAAI,GAAIqB,IAAKD,GACtB,kBAACV,EAAA,EAAD,CAAYN,QAAQ,WACjBf,EAAY+B,WAQ7B,kBAACE,EAAA,EAAD,CAAapB,UAAWjB,EAAQJ,OAAQ0C,GAAG,OACxCnC,GACC,kBAACoC,EAAA,EAAD,CACED,GAAG,MACHE,WAAS,EACTC,kBAAgB,EAChBtB,QAAQ,YACRuB,MAAM,UACNtB,QAASrB,EAAMqB,SANjB,cCpIN3C,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCuD,IAAK,CACHS,KAAM,EACNC,MAAO,OACPjD,UAAW,SAEbb,WAAY,CACVC,QAASJ,EAAMK,QAAQ,IAEzBC,KAAM,CACJC,OAAQP,EAAMK,QAAQ,IAExBG,QAAS,CACPD,OAAQP,EAAMK,QAAQ,IAExBI,eAAgB,CACdC,aAAc,IAEhBC,KAAM,CACJC,cAAe,UAEjBC,OAAQ,CACNC,WAAY,UAEdC,KAAM,CACJC,UAAW,KAEbC,OAAQ,CACNC,UAAW,QA6GAgD,iCAAiB,CAC9B9E,OAAQC,2CADK6E,CAEZ5C,IAAM6C,MA3GT,SAAmB/C,GACjB,IAAMC,EAAUvB,IADQ,EAEQwB,IAAMC,SAAS,CAC7C6C,IAAK,UACLC,KAAM,aAJgB,mBAEjBC,EAFiB,KAEPC,EAFO,OAMEjD,IAAMC,SAAS,CAAEiD,YAAY,EAAOC,OAAQ,KAN9C,mBAMjBC,EANiB,KAMVC,EANU,OAOUrD,IAAMC,UAAS,GAPzB,6BASxBD,IAAMsD,WAAU,WACVxD,EAAMyD,cACRN,EAAYnD,EAAMyD,gBAEnB,CAACzD,EAAMyD,eAEV,IAAMC,EAAc,SAAC1D,EAAOqD,EAAQM,GAClCJ,EAAS,CAAEH,YAAY,EAAMC,WAC7BO,QAAQC,IAAI7D,EAAOqD,IAWf/B,EAAwB,WAC5BtB,EAAM8D,QAAQC,KAAK,CACjBC,SAAU,cACVV,MAAOA,EAAMD,UAqBjB,OACE,kBAACtC,EAAA,EAAD,CAAMe,WAAS,EAACC,QAAQ,UACtB,kBAAChB,EAAA,EAAD,CAAML,MAAI,EAACM,GAAI,IACb,kBAAC,MAAD,CACEiD,OAAQjE,EAAMiE,OACdC,KAAM,EACNhD,UAAWjB,EAAQkC,IACnBgC,OAAQjB,GAEPlD,EAAMoE,KAAKjC,KAAI,SAAAzB,GACd,IAAMD,EACHC,EAAKD,SACJC,EAAKD,QAAQE,uBACbD,EAAKD,QAAQE,sBAAsBC,WACrCF,EAAKD,SACL,GACIyC,EACHxC,EAAKG,YACJH,EAAKG,WAAWwD,UAChB3D,EAAKG,WAAWwD,SAASC,UAC3B,GAEF,GAAK7D,GAAYyC,EAEjB,OACE,kBAAC,SAAD,eACEb,IAAK3B,EAAK6D,IACVC,KAAM/D,EACNyC,SAAUA,EACV7B,QAASqC,GACLhD,OAIV,kBAAC,aAAD,CACE+D,QAASnB,EAAMF,WACfC,OAAQC,EAAMD,OACdqB,QAjEY,SAAAf,GACpBJ,EAAU,CAAEH,YAAY,EAAOC,OAAQ,MAiE/BsB,OAAQ,SAAChB,IAvDM,SAAC3D,EAAO2D,GAC/B,IAAM9D,EACA,kBAAC2C,EAAA,EAAD,CACED,GAAG,MACHE,WAAS,EACTC,kBAAgB,EAChBtB,QAAQ,YACRuB,MAAM,UACNtB,QAASC,GANX,UAYNsD,IAASC,OAAO3E,IAAM4E,SAASC,KAAKlF,GAASmF,SAASC,eAAe,QA0C3DC,IAEFhE,UAAWjB,EAAQlB,YAEnB,kBAAC,EAAD,eAAe2B,KAAM4C,EAAMD,OAAQ/B,sBAAuB,kBAAMA,MAA6BtB,Y,6CCnInGtB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCM,KAAM,CACJiG,UAAW,SACX,QAAS,CACPhG,OAAQP,EAAMK,QAAQ,KAG1BmG,MAAO,CACLjG,OAAQP,EAAMK,QAAQ,IAExBoG,UAAW,CACTC,gBAAiB,QACjBC,UAAW,QAiGAC,MA7Ff,SAAmBxF,GACjB,IAAMC,EAAUvB,IADQ,EAEcwB,IAAMC,SAAS,IAF7B,mBAEjBsF,EAFiB,KAEJC,EAFI,OAGUxF,IAAMC,SAAS,IAHzB,mBAGjBwF,EAHiB,KAGNC,EAHM,OAKQ1F,IAAMC,SAAS,CAAE6C,IAAK,KAAMC,IAAK,OALzC,mBAKP4C,GALO,WAMlBC,EAAQ5F,IAAM6F,SAEpB7F,IAAMsD,WAAU,WACd,GAAKmC,EAAL,CAEA,IAAMvB,EAAI,uCAAG,8BAAA4B,EAAA,sEACOC,MAAM,0GAAD,OACqFN,EADrF,+BACqH1H,2CAC1I,CAAE,8BAA+B,MAHxB,cACLiI,EADK,gBAKQA,EAAIC,OALZ,OAKLA,EALK,OAMXT,EAAeS,EAAKC,aANT,2CAAH,qDASVC,aAAaP,EAAMQ,SACnB,IAAMC,EAAQC,YAAW,WACvBpC,MACC,KACH0B,EAAMQ,QAAUC,KACf,CAACZ,IAEJ,IAAMc,EAAe,SAAAC,GAAU,IACrBC,EAAUD,EAAME,OAAhBD,MAERf,EAAae,IAGTE,EAA4B,uCAAG,WAAOH,EAAOC,GAAd,iBAAAX,EAAA,yDAC9BW,EAD8B,iEAGjBV,MAAM,wGAAD,OACmFU,EAAMG,SADzF,gCACyH7I,4CAJ7G,cAG7BiI,EAH6B,gBAMhBA,EAAIC,OANY,QAM7BA,EAN6B,SAUjCA,EAAKY,QACLZ,EAAKY,OAAO1C,UACZ8B,EAAKY,OAAO1C,SAASC,WAErBuB,EAAYM,EAAKY,OAAO1C,SAASC,UAE7BtE,EAAM6F,aACR7F,EAAM6F,YAAYM,EAAKY,OAAO1C,SAASC,WAjBR,2CAAH,wDAsBlC,OACE,yBAAKpD,UAAWlB,EAAMC,SAClB,kBAACc,EAAA,EAAD,CAAML,MAAI,EAACM,GAAI,GAAIC,GAAI,EAAGC,UAAWjB,EAAQmF,OACzC,kBAAC4B,EAAA,EAAD,CACIzE,GAAG,eACH0E,UAAQ,EACRC,QAASzB,EACT0B,SAAUN,EACVO,eAAgB,SAAAC,GAAM,OAAIA,EAAOC,aACjCC,aAAc,SAAAF,GAAM,OAChB,kBAAC,IAAMG,SAAP,KACI,kBAAC9F,EAAA,EAAD,CAAYN,QAAQ,SACfiG,EAAO1G,sBAAsBC,UAAW,IACzC,2BAAO6G,MAAO,CAAE9E,MAAO,SAClB0E,EAAO1G,sBAAsB+G,mBAK9CC,YAAa,SAAAC,GAAM,OACf,kBAACC,EAAA,EAAD,eACIC,WAAS,EACTC,UAAQ,EACRtF,WAAS,GACLmF,EAJR,CAKI1G,UAAWjB,EAAQoF,UACnB2C,YAAY,cACZxD,KAAK,OACLpD,QAAQ,WACR+F,SAAUV,WCjF5B/H,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCM,KAAM,CACJC,OAAQP,EAAMK,QAAQ,IAExBgJ,MAAO,CACLrI,UAAW,KAEbR,QAAS,CACPD,OAAQP,EAAMK,QAAQ,IAExBI,eAAgB,CACdC,aAAc,IAEhBC,KAAM,CACJC,cAAe,UAEjBC,OAAQ,CACNG,UAAW,GACXF,WAAY,UAEdC,KAAM,CACJC,UAAW,KAEbC,OAAQ,CACNC,UAAW,IAEbsF,MAAO,CACLE,gBAAiB,QACjBC,UAAW,IAKb2C,UAAW,CACThF,SAAU,WACViF,OAAQ,EACRvF,KAAM,EACNC,MAAO,WA8HI3C,cAAM6C,KAAKqF,aA1H1B,SAAsBpI,GACpB,IAAMC,EAAUvB,IADW,EAEHwB,IAAMC,SAAS,IAFZ,mBAEpBiE,EAFoB,KAEdiE,EAFc,OAGKnI,IAAMC,SAAS,CAC7C6C,IAAK,UACLC,KAAM,aALmB,mBAGpBqB,EAHoB,KAGVuB,EAHU,KAwC3B,OAxBA3F,IAAMsD,WAAU,WAEZ3F,IACGyK,WAAW,WACXC,MACAC,MAAK,SAAAC,GACJ,IAAMrE,EAAOqE,EAAIC,KAAKvG,KAAI,SAAAwG,GAAG,OAAIA,EAAIvE,UACrCiE,EAAQjE,QAIb,IAcD,kBAACrD,EAAA,EAAD,CAAMe,WAAS,EAACC,QAAQ,UACtB,kBAAC,EAAD,eAAWqC,KAAMA,EAAMX,aAAca,GAActE,IACnD,kBAAC,EAAD,CAAW6F,YAPW,SAAAvB,GACxBuB,EAAYvB,IAMiCrE,QAASA,EAAQiI","file":"static/js/10.c7de0f62.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_FB_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n}\r\n\r\nconst firebaseApp = firebase.initializeApp(config);\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport { db };","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  ButtonBase\r\n} from \"@material-ui/core\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ContactPhoneIcon from \"@material-ui/icons/ContactPhone\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    cursor: \"pointer\"\r\n  },\r\n  infoWindow: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  root: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  smBottomMargin: {\r\n    marginBottom: 10\r\n  },\r\n  icon: {\r\n    verticalAlign: \"middle\"\r\n  },\r\n  header: {\r\n    alignItems: \"normal\"\r\n  },\r\n  main: {\r\n    minHeight: 200\r\n  },\r\n  button: {\r\n    maxHeight: 40\r\n  }\r\n}));\r\n\r\nconst CardContainer = props => {\r\n  const classes = useStyles();\r\n  const [isListPage, setIsListPage] = React.useState(false);\r\n  const itemMapping = {\r\n    n95: \"N95 Face Mask\",\r\n    \"face mask\": \"Face Mask\",\r\n    \"face shield\": \"Face Shield\",\r\n    gloves: \"Gloves\",\r\n    coverall: \"Coveralls\"\r\n  };\r\n\r\n  const orgName =\r\n    (props.item.orgName &&\r\n      props.item.orgName.structured_formatting &&\r\n      props.item.orgName.structured_formatting.main_text) ||\r\n    props.item.orgName ||\r\n    \"\";\r\n  const orgAddress =\r\n    (props.item.orgAddress && props.item.orgAddress.formatted_address) ||\r\n    props.item.orgAddress ||\r\n    \"\";\r\n\r\n  return (\r\n    <Grid item xs={12} sm={12} className={classes.root}>\r\n      <Card\r\n        variant=\"outlined\"\r\n        onClick={props.handleInfoWindowClick}\r\n        className={classes.card}\r\n      >\r\n        <CardHeader\r\n          className={classes.header}\r\n          disableTypography\r\n          title={<Typography paragraph>{orgName}</Typography>}\r\n          subheader={<Typography variant=\"caption\">{orgAddress}</Typography>}\r\n        />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            className={classes.smBottomMargin}\r\n          >\r\n            <Typography variant=\"caption\">\r\n              <BusinessIcon className={classes.icon} /> Department Name:\r\n            </Typography>\r\n            <Typography variant=\"caption\">{props.item.department}</Typography>\r\n          </Grid>\r\n          {/* <Grid\r\n              container\r\n              justify=\"space-between\"\r\n              className={classes.smBottomMargin}\r\n            >\r\n              <Typography variant=\"caption\">\r\n                <BusinessIcon className={classes.icon} /> Building Name/Number:\r\n              </Typography>\r\n              <Typography variant=\"caption\">{props.item.building}</Typography>\r\n            </Grid> */}\r\n          {/* <Grid\r\n              container\r\n              justify=\"space-between\"\r\n              className={classes.smBottomMargin}\r\n            >\r\n              <Typography variant=\"caption\">\r\n                <ContactPhoneIcon className={classes.icon} /> Contact Person:\r\n              </Typography>\r\n              <Typography variant=\"caption\">{props.item.contact}</Typography>\r\n            </Grid> */}\r\n          {/* <Grid item xs={12}> */}\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            className={classes.smBottomMargin}\r\n          >\r\n            <Typography variant=\"caption\">\r\n              <EventNoteIcon className={classes.icon} />\r\n              Items Needed:\r\n            </Typography>\r\n            <div>\r\n              {props.item.items &&\r\n                props.item.items.length &&\r\n                props.item.items.map(product => {\r\n                  return (\r\n                    <Grid item xs={12} key={product}>\r\n                      <Typography variant=\"caption\">\r\n                        {itemMapping[product]}\r\n                      </Typography>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n            </div>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions className={classes.button} id=\"iwc\">\r\n          {isListPage && (\r\n            <Button\r\n              id=\"iwc\"\r\n              fullWidth\r\n              disableElevation\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={props.onClick}\r\n            >\r\n              DONATE\r\n            </Button>\r\n          )}\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CardContainer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport { Grid, Paper, Typography, Divider, Button } from \"@material-ui/core\";\r\nimport CardContainer from \"../../workflow/donate/components/CardContainer\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  map: {\r\n    left: 0,\r\n    width: \"100%\",\r\n    minHeight: \"100vh\"\r\n  },\r\n  infoWindow: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  root: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  smBottomMargin: {\r\n    marginBottom: 10\r\n  },\r\n  icon: {\r\n    verticalAlign: \"middle\"\r\n  },\r\n  header: {\r\n    alignItems: \"normal\"\r\n  },\r\n  main: {\r\n    minHeight: 200\r\n  },\r\n  button: {\r\n    maxHeight: 40\r\n  }\r\n}));\r\n\r\nfunction MapLayout(props) {\r\n  const classes = useStyles();\r\n  const [position, setPosition] = React.useState({\r\n    lat: 37.354107,\r\n    lng: -121.955238\r\n  });\r\n  const [state, setState] = React.useState({ showWindow: false, marker: {} });\r\n  const [showChild, setShowChild] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (props.cityLocation) {\r\n      setPosition(props.cityLocation);\r\n    }\r\n  }, [props.cityLocation])\r\n\r\n  const handleClick = (props, marker, e) => {\r\n    setState({ showWindow: true, marker });\r\n    console.log(props, marker);\r\n  };\r\n\r\n  const handleOnOpen = e => {\r\n    setShowChild(true);\r\n  };\r\n\r\n  const handleOnClose = e => {\r\n    setState( { showWindow: false, marker: {} });\r\n  }\r\n\r\n  const handleInfoWindowClick = () => {\r\n    props.history.push({\r\n      pathname: \"/donate/org\",\r\n      state: state.marker\r\n    });\r\n  }\r\n\r\n  const onInfoWindowOpen = (props, e) => {\r\n    const button = (\r\n          <Button\r\n            id=\"iwc\"\r\n            fullWidth\r\n            disableElevation\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleInfoWindowClick}\r\n          >\r\n            DONATE\r\n          </Button>\r\n    )\r\n    // const button = (<button onClick={e => {console.log(\"hmapbuttoni1\");}}>mapbutton</button>);\r\n    ReactDOM.render(React.Children.only(button), document.getElementById(\"iwc\"));\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={12}>\r\n        <Map\r\n          google={props.google}\r\n          zoom={9}\r\n          className={classes.map}\r\n          center={position}\r\n        >\r\n          {props.data.map(item => {\r\n            const orgName =\r\n              (item.orgName &&\r\n                item.orgName.structured_formatting &&\r\n                item.orgName.structured_formatting.main_text) ||\r\n              item.orgName ||\r\n              \"\";\r\n            const position =\r\n              (item.orgAddress &&\r\n                item.orgAddress.geometry &&\r\n                item.orgAddress.geometry.location) ||\r\n              \"\";\r\n\r\n            if (!orgName || !position) return;\r\n\r\n            return (\r\n              <Marker\r\n                key={item.uid}\r\n                name={orgName}\r\n                position={position}\r\n                onClick={handleClick}\r\n                {...item}\r\n              />\r\n            );\r\n          })}\r\n          <InfoWindow\r\n            visible={state.showWindow}\r\n            marker={state.marker}\r\n            onClose={handleOnClose}\r\n            onOpen={(e) => {\r\n              onInfoWindowOpen(props, e);\r\n            }}\r\n            className={classes.infoWindow}\r\n          >\r\n            <CardContainer item={state.marker} handleInfoWindowClick={() => handleInfoWindowClick()} {...props} />\r\n          </InfoWindow>\r\n        </Map>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: process.env.REACT_APP_API_KEY\r\n})(React.memo(MapLayout));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, TextField } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    textAlign: \"center\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(2)\r\n    }\r\n  },\r\n  input: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    backgroundColor: \"white\",\r\n    marginTop: 60\r\n  }\r\n}));\r\n\r\nfunction CityField(props) {\r\n  const classes = useStyles();\r\n  const [cityOptions, setCityOptions] = React.useState([]);\r\n  const [cityValue, setCityValue] = React.useState(\"\");\r\n\r\n  const [location, setLocation] = React.useState({ lat: null, lng: null });\r\n  const timer = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if (!cityValue) return;\r\n\r\n    const data = async () => {\r\n      const res = await fetch(\r\n        `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${cityValue}&types=(cities)&key=${process.env.REACT_APP_API_KEY}`,\r\n        { \"Access-Control-Allow-Origin\": \"*\" }\r\n      );\r\n      const json = await res.json();\r\n      setCityOptions(json.predictions);\r\n    };\r\n\r\n    clearTimeout(timer.current);\r\n    const delay = setTimeout(() => {\r\n      data();\r\n    }, 300);\r\n    timer.current = delay;\r\n  }, [cityValue]);\r\n\r\n  const handleChange = event => {\r\n    const { value } = event.target;\r\n\r\n    setCityValue(value);\r\n  };\r\n\r\n  const handleCityAutoCompleteChange = async (event, value) => {\r\n    if (!value) return;\r\n\r\n    const res = await fetch(\r\n      `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/details/json?place_id=${value.place_id}&fields=geometry&key=${process.env.REACT_APP_API_KEY}`\r\n    );\r\n    const json = await res.json();\r\n\r\n    if (\r\n      json &&\r\n      json.result &&\r\n      json.result.geometry &&\r\n      json.result.geometry.location\r\n    ) {\r\n      setLocation(json.result.geometry.location);\r\n\r\n      if (props.setLocation) {\r\n        props.setLocation(json.result.geometry.location);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={props.classes}>\r\n        <Grid item xs={12} sm={8} className={classes.input}>\r\n            <Autocomplete\r\n                id=\"autocomplete\"\r\n                freeSolo\r\n                options={cityOptions}\r\n                onChange={handleCityAutoCompleteChange}\r\n                getOptionLabel={option => option.description}\r\n                renderOption={option => (\r\n                    <React.Fragment>\r\n                        <Typography variant=\"body1\">\r\n                            {option.structured_formatting.main_text}{\" \"}\r\n                            <small style={{ color: \"gray\" }}>\r\n                                {option.structured_formatting.secondary_text}\r\n                            </small>\r\n                        </Typography>\r\n                    </React.Fragment>\r\n                )}\r\n                renderInput={params => (\r\n                    <TextField\r\n                        autoFocus\r\n                        required\r\n                        fullWidth\r\n                        {...params}\r\n                        className={classes.textField}\r\n                        placeholder=\"Search City\"\r\n                        name=\"city\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                    />\r\n                )}\r\n            />\r\n        </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CityField;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { db } from \"../../components/firebase/firebase\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  TextField,\r\n  InputAdornment\r\n} from \"@material-ui/core\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ContactPhoneIcon from \"@material-ui/icons/ContactPhone\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport MapLayout from \"../components/MapLayout\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CityField from \"../components/CityField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    minHeight: 450\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  smBottomMargin: {\r\n    marginBottom: 10\r\n  },\r\n  icon: {\r\n    verticalAlign: \"middle\"\r\n  },\r\n  header: {\r\n    minHeight: 90,\r\n    alignItems: \"normal\"\r\n  },\r\n  main: {\r\n    minHeight: 200\r\n  },\r\n  button: {\r\n    maxHeight: 40\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    marginTop: 60\r\n    // position: \"absolute\",\r\n    // bottom: 200,\r\n    // width: \"100%\"\r\n  },\r\n  cityField: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    width: \"75%\"\r\n  }\r\n}));\r\n\r\nfunction DonateLayout(props) {\r\n  const classes = useStyles();\r\n  const [data, setData] = React.useState([]);\r\n  const [location, setLocation] = React.useState({\r\n    lat: 37.354107,\r\n    lng: -121.955238\r\n  });\r\n\r\n  const itemMapping = {\r\n    n95: \"N95 Face Mask\",\r\n    \"face mask\": \"Face Mask\",\r\n    \"face shield\": \"Face Shield\",\r\n    gloves: \"Gloves\",\r\n    coverall: \"Coveralls\"\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () =>\r\n      db\r\n        .collection(\"request\")\r\n        .get()\r\n        .then(val => {\r\n          const data = val.docs.map(doc => doc.data());\r\n          setData(data);\r\n        });\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleClick = item => {\r\n    props.history.push({\r\n      pathname: \"/donate/org\",\r\n      state: item\r\n    });\r\n  };\r\n\r\n  const handleSetLocation = location => {\r\n    setLocation(location);\r\n  };\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <MapLayout data={data} cityLocation={location} {...props} />\r\n      <CityField setLocation={handleSetLocation} classes={classes.cityField} />\r\n      {/* <Grid item xs={12} sm={8} className={classes.root}>\r\n        <Grid container justify=\"center\">\r\n          <TextField\r\n            fullWidth\r\n            placeholder=\"Enter City\"\r\n            variant=\"outlined\"\r\n            className={classes.input}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid> */}\r\n      {/* </Grid> */}\r\n      {/* {data.length\r\n        ? data.map((item, index) => {\r\n            const orgName = (item.orgName && item.orgName.structured_formatting && item.orgName.structured_formatting.main_text) || item.orgName || \"\";\r\n            const orgAddress = (item.orgAddress && item.orgAddress.formatted_address) || item.orgAddress || \"\";\r\n            return (\r\n              <Grid key={`${item}-${index}`} item xs={12} sm={5} className={classes.root}>\r\n              <Card variant=\"outlined\" className={classes.paper}>\r\n                  <CardHeader\r\n                    className={classes.header}\r\n                    disableTypography\r\n                    title={<Typography variant=\"h6\">{orgName}</Typography>}\r\n                    subheader={<Typography variant=\"body2\">{orgAddress}</Typography>}\r\n                  />\r\n                <Divider className={classes.divider} />\r\n                <CardContent >\r\n                    <Grid container justify=\"space-between\" className={classes.smBottomMargin}>\r\n                    <Typography variant=\"body1\"><BusinessIcon className={classes.icon} /> Department Name:</Typography>\r\n                    <Typography variant=\"body1\">{item.department}</Typography>\r\n                    </Grid>\r\n                    <Grid container justify=\"space-between\" className={classes.smBottomMargin}>\r\n                    <Typography variant=\"body1\"><BusinessIcon className={classes.icon} /> Building Name/Number:</Typography>\r\n                    <Typography variant=\"body1\">{item.building}</Typography>\r\n                    </Grid>\r\n                    <Grid container justify=\"space-between\" className={classes.smBottomMargin}>\r\n                    <Typography variant=\"body1\"><ContactPhoneIcon className={classes.icon} /> Contact Person:</Typography>\r\n                    <Typography variant=\"body1\">{item.contact}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" className={classes.smBottomMargin}>\r\n                        <Typography variant=\"body1\"><EventNoteIcon className={classes.icon} />Items Needed:</Typography>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.smBottomMargin}>\r\n                    <Grid container justify=\"space-between\">\r\n                        {item.items &&\r\n                        item.items.length &&\r\n                        item.items.map(product => {\r\n                            return (\r\n                            <Typography key={product} variant=\"body1\">\r\n                                {itemMapping[product]}\r\n                            </Typography>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <Divider className={classes.divider} />\r\n                <CardActions className={classes.button}>\r\n                    <Button fullWidth disableElevation variant=\"contained\" color=\"primary\" onClick={() => handleClick(item)}>\r\n                        DONATE\r\n                    </Button>\r\n                </CardActions>\r\n              </Card>\r\n              </Grid>\r\n            );\r\n          })\r\n        : null} */}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default React.memo(withRouter(DonateLayout));\r\n"],"sourceRoot":""}