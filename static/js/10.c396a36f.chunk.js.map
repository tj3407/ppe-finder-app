{"version":3,"sources":["components/firebase/firebase.js","workflow/donate/components/CardContainer.js","workflow/components/MapLayout.js","workflow/donate/DonateLayout.js"],"names":["db","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","card","cursor","infoWindow","padding","spacing","root","margin","divider","smBottomMargin","marginBottom","icon","verticalAlign","header","alignItems","main","minHeight","button","maxHeight","CardContainer","props","classes","React","useState","isListPage","itemMapping","n95","gloves","coverall","orgName","item","structured_formatting","main_text","orgAddress","formatted_address","Grid","xs","sm","className","Card","variant","onClick","handleInfoWindowClick","CardHeader","disableTypography","title","Typography","paragraph","subheader","CardContent","container","justify","department","items","length","map","product","key","CardActions","id","Button","fullWidth","disableElevation","color","left","width","GoogleApiWrapper","memo","lat","lng","position","showWindow","marker","state","setState","handleClick","e","console","log","history","push","pathname","google","zoom","center","data","geometry","location","uid","name","visible","onClose","onOpen","ReactDOM","render","Children","only","document","getElementById","onInfoWindowOpen","paper","input","backgroundColor","marginTop","withRouter","setData","useEffect","collection","get","then","val","docs","doc","TextField","placeholder","InputProps","startAdornment","InputAdornment"],"mappings":"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","file":"static/js/10.c396a36f.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_FB_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n}\r\n\r\nconst firebaseApp = firebase.initializeApp(config);\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport { db };","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Paper, Typography, Divider, Button, ButtonBase } from \"@material-ui/core\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ContactPhoneIcon from \"@material-ui/icons/ContactPhone\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    cursor: \"pointer\"\r\n  },\r\n  infoWindow: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  root: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  smBottomMargin: {\r\n    marginBottom: 10\r\n  },\r\n  icon: {\r\n    verticalAlign: \"middle\"\r\n  },\r\n  header: {\r\n    alignItems: \"normal\"\r\n  },\r\n  main: {\r\n    minHeight: 200\r\n  },\r\n  button: {\r\n    maxHeight: 40\r\n  }\r\n}));\r\n\r\nconst CardContainer = props => {\r\n  const classes = useStyles();\r\n  const [isListPage, setIsListPage] = React.useState(false);\r\n  const itemMapping = {\r\n    n95: \"N95 Face Mask\",\r\n    \"face mask\": \"Face Mask\",\r\n    \"face shield\": \"Face Shield\",\r\n    gloves: \"Gloves\",\r\n    coverall: \"Coveralls\"\r\n  };\r\n\r\n  const orgName =\r\n    (props.item.orgName &&\r\n      props.item.orgName.structured_formatting &&\r\n      props.item.orgName.structured_formatting.main_text) ||\r\n    props.item.orgName ||\r\n    \"\";\r\n  const orgAddress =\r\n    (props.item.orgAddress && props.item.orgAddress.formatted_address) ||\r\n    props.item.orgAddress ||\r\n    \"\";\r\n\r\n  return (\r\n    <Grid item xs={12} sm={12} className={classes.root}>\r\n      <Card variant=\"outlined\" onClick={props.handleInfoWindowClick} className={classes.card}>\r\n        {/* <ButtonBase> */}\r\n          <CardHeader\r\n            className={classes.header}\r\n            disableTypography\r\n            title={<Typography paragraph>{orgName}</Typography>}\r\n            subheader={<Typography variant=\"caption\">{orgAddress}</Typography>}\r\n          />\r\n          {/* <Divider className={classes.divider} /> */}\r\n          <CardContent>\r\n            <Grid\r\n              container\r\n              justify=\"space-between\"\r\n              className={classes.smBottomMargin}\r\n            >\r\n              <Typography variant=\"caption\">\r\n                <BusinessIcon className={classes.icon} /> Department Name:\r\n              </Typography>\r\n              <Typography variant=\"caption\">{props.item.department}</Typography>\r\n            </Grid>\r\n            {/* <Grid\r\n              container\r\n              justify=\"space-between\"\r\n              className={classes.smBottomMargin}\r\n            >\r\n              <Typography variant=\"caption\">\r\n                <BusinessIcon className={classes.icon} /> Building Name/Number:\r\n              </Typography>\r\n              <Typography variant=\"caption\">{props.item.building}</Typography>\r\n            </Grid> */}\r\n            {/* <Grid\r\n              container\r\n              justify=\"space-between\"\r\n              className={classes.smBottomMargin}\r\n            >\r\n              <Typography variant=\"caption\">\r\n                <ContactPhoneIcon className={classes.icon} /> Contact Person:\r\n              </Typography>\r\n              <Typography variant=\"caption\">{props.item.contact}</Typography>\r\n            </Grid> */}\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" className={classes.smBottomMargin}>\r\n                <Typography variant=\"caption\">\r\n                  <EventNoteIcon className={classes.icon} />\r\n                  Items Needed:\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.smBottomMargin}>\r\n              <Grid container justify=\"space-between\">\r\n                {props.item.items &&\r\n                  props.item.items.length &&\r\n                  props.item.items.map(product => {\r\n                    return (\r\n                      <Typography key={product} variant=\"caption\">\r\n                        {itemMapping[product]}\r\n                      </Typography>\r\n                    );\r\n                  })}\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        {/* </ButtonBase> */}\r\n        {/* <Divider className={classes.divider} /> */}\r\n        <CardActions className={classes.button} id=\"iwc\">\r\n          {isListPage && <Button\r\n            id=\"iwc\"\r\n            fullWidth\r\n            disableElevation\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={props.onClick}\r\n          >\r\n            DONATE\r\n          </Button>}\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CardContainer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport { Grid, Paper, Typography, Divider, Button } from \"@material-ui/core\";\r\nimport CardContainer from \"../../workflow/donate/components/CardContainer\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  map: {\r\n    left: 0,\r\n    width: \"100%\",\r\n    minHeight: \"100vh\"\r\n  },\r\n  infoWindow: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  root: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  smBottomMargin: {\r\n    marginBottom: 10\r\n  },\r\n  icon: {\r\n    verticalAlign: \"middle\"\r\n  },\r\n  header: {\r\n    alignItems: \"normal\"\r\n  },\r\n  main: {\r\n    minHeight: 200\r\n  },\r\n  button: {\r\n    maxHeight: 40\r\n  }\r\n}));\r\n\r\nfunction MapLayout(props) {\r\n  const classes = useStyles();\r\n  const [position, setPosition] = React.useState({\r\n    lat: 37.354107,\r\n    lng: -121.955238\r\n  });\r\n  const [state, setState] = React.useState({ showWindow: false, marker: {} });\r\n  const [showChild, setShowChild] = React.useState(false);\r\n\r\n  const handleClick = (props, marker, e) => {\r\n    setState({ showWindow: true, marker });\r\n    console.log(props, marker);\r\n  };\r\n\r\n  const handleOnOpen = e => {\r\n    setShowChild(true);\r\n  };\r\n\r\n  const handleOnClose = e => {\r\n    setState( { showWindow: false, marker: {} });\r\n  }\r\n\r\n  const handleInfoWindowClick = () => {\r\n    props.history.push({\r\n      pathname: \"/donate/org\",\r\n      state: state.marker\r\n    });\r\n  }\r\n\r\n  const onInfoWindowOpen = (props, e) => {\r\n    const button = (\r\n          <Button\r\n            id=\"iwc\"\r\n            fullWidth\r\n            disableElevation\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleInfoWindowClick}\r\n          >\r\n            DONATE\r\n          </Button>\r\n    )\r\n    // const button = (<button onClick={e => {console.log(\"hmapbuttoni1\");}}>mapbutton</button>);\r\n    ReactDOM.render(React.Children.only(button), document.getElementById(\"iwc\"));\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={12}>\r\n        <Map\r\n          google={props.google}\r\n          zoom={10}\r\n          className={classes.map}\r\n          center={position}\r\n        >\r\n          {props.data.map(item => {\r\n            const orgName =\r\n              (item.orgName &&\r\n                item.orgName.structured_formatting &&\r\n                item.orgName.structured_formatting.main_text) ||\r\n              item.orgName ||\r\n              \"\";\r\n            const position =\r\n              (item.orgAddress &&\r\n                item.orgAddress.geometry &&\r\n                item.orgAddress.geometry.location) ||\r\n              \"\";\r\n\r\n            if (!orgName || !position) return;\r\n\r\n            return (\r\n              <Marker\r\n                key={item.uid}\r\n                name={orgName}\r\n                position={position}\r\n                onClick={handleClick}\r\n                {...item}\r\n              />\r\n            );\r\n          })}\r\n          <InfoWindow\r\n            visible={state.showWindow}\r\n            marker={state.marker}\r\n            onClose={handleOnClose}\r\n            onOpen={(e) => {\r\n              onInfoWindowOpen(props, e);\r\n            }}\r\n            className={classes.infoWindow}\r\n          >\r\n            <CardContainer item={state.marker} handleInfoWindowClick={() => handleInfoWindowClick()} {...props} />\r\n          </InfoWindow>\r\n        </Map>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: process.env.REACT_APP_API_KEY\r\n})(React.memo(MapLayout));\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { db } from \"../../components/firebase/firebase\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  TextField,\r\n  InputAdornment\r\n} from \"@material-ui/core\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ContactPhoneIcon from \"@material-ui/icons/ContactPhone\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport MapLayout from \"../components/MapLayout\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    minHeight: 450\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  smBottomMargin: {\r\n    marginBottom: 10\r\n  },\r\n  icon: {\r\n    verticalAlign: \"middle\"\r\n  },\r\n  header: {\r\n    minHeight: 90,\r\n    alignItems: \"normal\"\r\n  },\r\n  main: {\r\n    minHeight: 200\r\n  },\r\n  button: {\r\n    maxHeight: 40\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    marginTop: 60\r\n    // position: \"absolute\",\r\n    // bottom: 200,\r\n    // width: \"100%\"\r\n  }\r\n}));\r\n\r\nfunction DonateLayout(props) {\r\n  const classes = useStyles();\r\n  const [data, setData] = React.useState([]);\r\n\r\n  const itemMapping = {\r\n    n95: \"N95 Face Mask\",\r\n    \"face mask\": \"Face Mask\",\r\n    \"face shield\": \"Face Shield\",\r\n    gloves: \"Gloves\",\r\n    coverall: \"Coveralls\"\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () =>\r\n      db\r\n        .collection(\"request\")\r\n        .get()\r\n        .then(val => {\r\n          const data = val.docs.map(doc => doc.data());\r\n          setData(data);\r\n        });\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleClick = item => {\r\n    props.history.push({\r\n      pathname: \"/donate/org\",\r\n      state: item\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <MapLayout data={data} {...props} />\r\n      <Grid item xs={12} sm={8} className={classes.root}>\r\n        <Grid container justify=\"center\">\r\n          <TextField\r\n            fullWidth\r\n            placeholder=\"Enter City\"\r\n            variant=\"outlined\"\r\n            className={classes.input}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {/* {data.length\r\n        ? data.map((item, index) => {\r\n            const orgName = (item.orgName && item.orgName.structured_formatting && item.orgName.structured_formatting.main_text) || item.orgName || \"\";\r\n            const orgAddress = (item.orgAddress && item.orgAddress.formatted_address) || item.orgAddress || \"\";\r\n            return (\r\n              <Grid key={`${item}-${index}`} item xs={12} sm={5} className={classes.root}>\r\n              <Card variant=\"outlined\" className={classes.paper}>\r\n                  <CardHeader\r\n                    className={classes.header}\r\n                    disableTypography\r\n                    title={<Typography variant=\"h6\">{orgName}</Typography>}\r\n                    subheader={<Typography variant=\"body2\">{orgAddress}</Typography>}\r\n                  />\r\n                <Divider className={classes.divider} />\r\n                <CardContent >\r\n                    <Grid container justify=\"space-between\" className={classes.smBottomMargin}>\r\n                    <Typography variant=\"body1\"><BusinessIcon className={classes.icon} /> Department Name:</Typography>\r\n                    <Typography variant=\"body1\">{item.department}</Typography>\r\n                    </Grid>\r\n                    <Grid container justify=\"space-between\" className={classes.smBottomMargin}>\r\n                    <Typography variant=\"body1\"><BusinessIcon className={classes.icon} /> Building Name/Number:</Typography>\r\n                    <Typography variant=\"body1\">{item.building}</Typography>\r\n                    </Grid>\r\n                    <Grid container justify=\"space-between\" className={classes.smBottomMargin}>\r\n                    <Typography variant=\"body1\"><ContactPhoneIcon className={classes.icon} /> Contact Person:</Typography>\r\n                    <Typography variant=\"body1\">{item.contact}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" className={classes.smBottomMargin}>\r\n                        <Typography variant=\"body1\"><EventNoteIcon className={classes.icon} />Items Needed:</Typography>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.smBottomMargin}>\r\n                    <Grid container justify=\"space-between\">\r\n                        {item.items &&\r\n                        item.items.length &&\r\n                        item.items.map(product => {\r\n                            return (\r\n                            <Typography key={product} variant=\"body1\">\r\n                                {itemMapping[product]}\r\n                            </Typography>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <Divider className={classes.divider} />\r\n                <CardActions className={classes.button}>\r\n                    <Button fullWidth disableElevation variant=\"contained\" color=\"primary\" onClick={() => handleClick(item)}>\r\n                        DONATE\r\n                    </Button>\r\n                </CardActions>\r\n              </Card>\r\n              </Grid>\r\n            );\r\n          })\r\n        : null} */}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default React.memo(withRouter(DonateLayout));\r\n"],"sourceRoot":""}